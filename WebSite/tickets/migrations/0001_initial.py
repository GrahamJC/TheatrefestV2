# Generated by Django 2.1.3 on 2018-11-21 17:55

import core.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('program', '0001_initial'),
        ('core', '0012_auto_20180922_1454'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', core.utils.AutoOneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='basket', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoxOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=32)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='box_offices', to='core.Festival')),
            ],
            options={
                'ordering': ('festival', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Fringer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=32)),
                ('shows', models.PositiveIntegerField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=4)),
                ('payment', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4)),
                ('basket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fringers', to='tickets.Basket')),
            ],
            options={
                'ordering': ['user', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FringerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=32)),
                ('shows', models.PositiveIntegerField(blank=True, default=0)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4)),
                ('is_online', models.BooleanField(default=False)),
                ('rules', models.TextField(blank=True, default='')),
                ('payment', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fringer_types', to='core.Festival')),
            ],
            options={
                'ordering': ('festival', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('customer', models.CharField(blank=True, default='', max_length=64)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5)),
                ('reason', models.TextField()),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('box_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='refunds', to='tickets.BoxOffice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='refunds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('customer', models.CharField(blank=True, default='', max_length=64)),
                ('buttons', models.IntegerField(blank=True, default=0)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5)),
                ('stripe_fee', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4)),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('box_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='tickets.BoxOffice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=32)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=4)),
                ('payment', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4)),
                ('basket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='tickets.Basket')),
                ('fringer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='tickets.Fringer')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='program.ShowPerformance')),
                ('refund', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='tickets.Refund')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='tickets.Sale')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['performance'],
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=32)),
                ('seqno', models.IntegerField(default=1)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4)),
                ('is_online', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('rules', models.TextField(blank=True, default='')),
                ('payment', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_types', to='core.Festival')),
            ],
            options={
                'ordering': ('festival', 'name'),
            },
        ),
        migrations.AddField(
            model_name='fringer',
            name='sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fringers', to='tickets.Sale'),
        ),
        migrations.AddField(
            model_name='fringer',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fringers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='tickettype',
            unique_together={('festival', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='fringertype',
            unique_together={('festival', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='fringer',
            unique_together={('user', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='boxoffice',
            unique_together={('festival', 'name')},
        ),
    ]
